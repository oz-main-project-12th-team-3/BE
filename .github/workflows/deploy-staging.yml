name: 🚀 Deploy to Staging

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  quality-gate:
    uses: ./.github/workflows/code-quality.yml
    secrets: inherit
  
  build-and-deploy:
    needs: quality-gate
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v4

    - name: 🔑 Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2 # 예: ap-northeast-2

    - name: 🗄️ Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: 🏗️ Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: oz-be-main-project # 예: oz-be-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: 🚀 Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: oz-digital-human # EB 애플리케이션 이름
        environment_name: oz-staging # Staging 환경 이름
        version_label: ${{ github.sha }}
        region: ap-northeast-2 # 예: ap-northeast-2
        deployment_package: docker-compose.yml # Docker 배포 명시
